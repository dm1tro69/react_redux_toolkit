{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      }\n    },\n\n    removeItemFromCart(state) {}\n\n  }\n});\nexport const cartActions = cartSlice.reducer;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/dmytrovoronov/edu/REACT/maximilian/starting-project 2/src/store/cart-slice.js"],"names":["createSlice","initialState","items","totalQuantity","totalAmount","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","removeItemFromCart","cartActions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE,CAFE;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,MADoB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;;AACA,UAAI,CAACH,YAAL,EAAkB;AACdJ,QAAAA,KAAK,CAACP,KAAN,CAAYe,IAAZ,CAAiB;AAACC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EAAjB;AACbG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KADF;AAEbC,UAAAA,QAAQ,EAAE,CAFG;AAGbC,UAAAA,UAAU,EAAEV,OAAO,CAACQ;AAHP,SAAjB;AAKH;AACJ,KAXK;;AAYNG,IAAAA,kBAAkB,CAACb,KAAD,EAAO,CAExB;;AAdK;AAHgB,CAAD,CAA7B;AAsBA,OAAO,MAAMc,WAAW,GAAGlB,SAAS,CAACmB,OAA9B;AAEP,eAAenB,SAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addItemToCart(state, action) {\n            const newItem = action.payload\n            const existingItem = state.items.find(item => item.id === newItem.id)\n            if (!existingItem){\n                state.items.push({itemId: newItem.id,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price\n                })\n            }\n        },\n        removeItemFromCart(state){\n\n        },\n\n    }\n})\n\nexport const cartActions = cartSlice.reducer\n\nexport default cartSlice"]},"metadata":{},"sourceType":"module"}