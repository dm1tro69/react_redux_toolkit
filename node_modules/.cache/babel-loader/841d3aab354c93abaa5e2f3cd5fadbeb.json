{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // addItemToCart(state, action) {\n    //     const newItem = action.payload\n    //     const existingItem = state.items.find(item => item.id === newItem.id)\n    //     if (!existingItem){\n    //         state.items.push({itemId: newItem.id,\n    //             price: newItem.price,\n    //             quantity: 1,\n    //             totalPrice: newItem.price,\n    //             name: newItem.title\n    //         })\n    //     }else {\n    //         existingItem.quantity++;\n    //         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n    //     }\n    // },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.reducer;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/dmytrovoronov/edu/REACT/maximilian/starting-project 2/src/store/cart-slice.js"],"names":["createSlice","initialState","items","totalQuantity","totalAmount","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE,CAFE;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,MADoB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAI,CAACU,YAAL,EAAmB;AACfJ,QAAAA,KAAK,CAACP,KAAN,CAAYe,IAAZ,CAAiB;AACbD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADC;AAEbE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFF;AAGbC,UAAAA,QAAQ,EAAE,CAHG;AAIbC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJP;AAKbZ,UAAAA,IAAI,EAAEK,OAAO,CAACU;AALD,SAAjB;AAOH,OARD,MAQO;AACHR,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAA5D;AACH;AACJ,KAhCK;;AAiCNI,IAAAA,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAe;AAC7B,YAAMM,EAAE,GAAEN,MAAM,CAACE,OAAjB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;AACA,UAAIH,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAgC;AAC3BV,QAAAA,KAAK,CAACP,KAAN,CAAYqB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC;AACJ,OAFD,MAEM;AACFH,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;AACH;AACJ;;AA1CK;AAHgB,CAAD,CAA7B;AAkDA,OAAO,MAAMM,WAAW,GAAGnB,SAAS,CAACoB,OAA9B;AAEP,eAAepB,SAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        // addItemToCart(state, action) {\n        //     const newItem = action.payload\n        //     const existingItem = state.items.find(item => item.id === newItem.id)\n        //     if (!existingItem){\n        //         state.items.push({itemId: newItem.id,\n        //             price: newItem.price,\n        //             quantity: 1,\n        //             totalPrice: newItem.price,\n        //             name: newItem.title\n        //         })\n        //     }else {\n        //         existingItem.quantity++;\n        //         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n        //     }\n        // },\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find((item) => item.id === newItem.id);\n            state.totalQuantity++;\n            if (!existingItem) {\n                state.items.push({\n                    id: newItem.id,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price,\n                    name: newItem.title,\n                });\n            } else {\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n            }\n        },\n        removeItemFromCart(state, action){\n            const id =action.payload\n            const existingItem = state.items.find(item => item.id === id)\n            if (existingItem.quantity === 1){\n                 state.items.filter(item => item.id !== id)\n            }else {\n                existingItem.quantity--\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n            }\n        },\n\n    }\n})\n\nexport const cartActions = cartSlice.reducer\n\nexport default cartSlice"]},"metadata":{},"sourceType":"module"}